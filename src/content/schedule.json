[
    {
        "SessionTitle": "Registration",
        "SessionDescription": "Registration and Breakfast",
        "SpeakerName": "",
        "Room": "Edison",
        "USEDT": "07:15:00"
    },
    {
        "SessionTitle": "Lunch",
        "SessionDescription": "Lunch and Networking",
        "SpeakerName": "",
        "Room": "Edison",
        "USEDT": "11:45:00"
    },
    {
        "SessionTitle": "Javascript and The Edge",
        "SessionDescription": "I would like to talk about how deploying Javascript applications in the Edge using Cloudflare simplifies running our code in 285 cities in 100+ countries. All this can be done in less than an hour. I would like to discuss the pros and cons of AWS infrastructure and share how Cloudflare can help us accomplish the same faster. My goal is to explain all the infrastructure concepts with as many analogies as possible with no buzzwords.",
        "SpeakerName": "Varsha Thirumakil",
        "Room": "Glenn 1-2 (150)",
        "USEDT": "08:15:00"
    },
    {
        "SessionTitle": "A Look Inside Observables",
        "SessionDescription": "RxJS Observables are one of the more complicated topics I've learned over the past few years. This is something I struggled to understand fully for a few years.\r\n\r\nObservables provide support for passing messages between parts of an application. They are a technique for event handling, asynchronous programming, and handling multiple values.\r\n\r\nIn this talk, we will examine what Observables are and how Observables can be implemented in a clean, testable manner using code examples to dig into the fine details.",
        "SpeakerName": "Bob Fornal",
        "Room": "Morgan 1 (50)",
        "USEDT": "08:15:00"
    },
    {
        "SessionTitle": "Building an Accessible Component Library",
        "SessionDescription": "One of the great things about JavaScript is the ability to create rich interactive experiences. But as we enhance and extend the default behavior of the web, we run the risk of leaving users behind. During this talk, I will go through techniques and strategies to build out an accessible Component Library to make building accessible solutions a more seamless experience.",
        "SpeakerName": "Russell Skaggs",
        "Room": "Morgan 2 (50)",
        "USEDT": "08:15:00"
    },
    {
        "SessionTitle": "All Things Functions in Javascript",
        "SessionDescription": "That's a JavaScript function, I know all about those. But wait...what's that asterisk for? Why does that function look different from that function? Is there a difference? And when does this mean that and not this? Let's take a deep dive into JavaScript functions, find out all the little quirks and intricacies and hopefully walk away with a better understanding of the functions we're writing, and maybe how to write them better. In this talk you'll learn about the importance of `this`, other variables specific to functions and what to look out for when coding JavaScript functions in general.",
        "SpeakerName": "Rey Riel",
        "Room": "Morgan 3 (50)",
        "USEDT": "08:15:00"
    },
    {
        "SessionTitle": "Debugging Burnout",
        "SessionDescription": "Working in a product space requires knowing how to take a very complex problem and break it down into iterative chunks.  Far too often, we’re so wrapped up in the problems we’re solving professionally, that we completely forget to introspectively look at ourselves and ask what problems in our own lives need solving.  Burnout is real and worth addressing.  But much like the dev process, understanding the “why” behind behavior leads to a more sustainable outcome.\r\n\r\nThis talk is a part of an ongoing conversation in life.  We want to develop a framework and language to properly identify burnout and how we can work through it.  Let’s take some time in this iteration of the conversation and talk about what it is, why it’s a problem, and how we can leverage tools at our disposal to help identify, address, and debug burnout.\r\n",
        "SpeakerName": "Samuel Shaw",
        "Room": "Wright 1 (50)",
        "USEDT": "08:15:00"
    },
    {
        "SessionTitle": "How to be a Leader",
        "SessionDescription": "What is leadership?  That term gets thrown around a lot, but what is it really?  What do leader do that makes them leaders?  Leadership can be learned and that is good as leaders are in high demand and in short supply.  TO be an effective leader, you must first understand what leadership is and what traits a leader exhibits.\r\n\r\nDuring this session, we will review leadership traits and principles and how you can implement them within your teams.  By demonstrating these in your daily activities you will earn the respect, confidence, and loyal cooperation of those on your team.",
        "SpeakerName": "Chad Green",
        "Room": "Wright 2 (30)",
        "USEDT": "08:15:00"
    },
    {
        "SessionTitle": "JSON Data Modeling in Document Databases",
        "SessionDescription": "If you’re thinking about using a document database, it can be intimidating to start. A flexible data model gives you a lot of choices, but which way is the right way? Is a document database even the right tool? In this session we’ll go over the basics of data modeling using JSON. We’ll compare and contrast with traditional RDBMS modeling. Impact on application code will be discussed, as well as some tooling that could be helpful along the way. The examples use the Couchbase Capella document database, but the principles from this session can also be applied to CosmosDb, Mongo, RavenDb, etc.",
        "SpeakerName": "Matthew Groves",
        "Room": "Glenn 1-2 (150)",
        "USEDT": "09:30:00"
    },
    {
        "SessionTitle": "Meet Your New BFF: Backend to Frontend without the Duct Tape",
        "SessionDescription": "Even with all of the incredible frameworks available today vs. a decade ago (or even two––for devs who have been around as long as I have), it still feels like much of our work as fullstack developers is still repetitive, and held together by duct tape code we shouldn’t be writing.  \r\n\r\nThis is because we write a lot of duplicate and boilerplate code for everyday things such as simple database CRUD, data validation, authorization, and data-type conversions, but the majority of these tasks haven’t advanced at the pace of modern web architecture.  \r\n\r\nIn this live coding session we'll turn a front-end app into a fullstack app with code that is easy to write, follow &, most importantly maintain, with end-to-end typesafety (say no to GraphQL!), consistent and encapsulated validations, live querying, access control, secured APIs, you get the idea. \r\n\r\nYou’ll come away from this session able to build apps for modern web architecture while still maintaining our code DRY and increase productivity.\r\n",
        "SpeakerName": "Dev Agrawal",
        "Room": "Morgan 1 (50)",
        "USEDT": "09:30:00"
    },
    {
        "SessionTitle": "Node.js Multithreading",
        "SessionDescription": "Node.js's sweet spot has traditionally been with I/O-intensive processes. It's event-driven architecture allows I/O operations to run concurrently while their associated callbacks are executed synchronously in the event loop. This, however, comes with a dark side in that CPU-bound operations are likely to block the event loop thus delaying when those callbacks are invoked. Fortunately, Node.js ships with several modules that allow us to offload those blocking CPU-bound operations from the main event loop so it's free to handle other tasks while the CPU-bound operations go about their business. Most notably we'll explore some ways in which the child_process and worker_threads modules can keep your Node.js application performant while still handling those CPU-intensive operations.",
        "SpeakerName": "Dave Fancher",
        "Room": "Morgan 2 (50)",
        "USEDT": "09:30:00"
    },
    {
        "SessionTitle": "Understanding Probabilistic Data Structures with 112,092 UFO Sightings",
        "SessionDescription": "There are three reactions to the title of this talk:\r\n\r\n- What the heck’s a probabilistic data structure?\r\n- UFO Sightings… wha?\r\n- 112,092 is an oddly specific number.\r\n\r\nThis is a talk about the first bullet point with the second thrown in just for fun. I like weird stuff—UFOs, Bigfoot, peanut butter and bologna on toast—maybe you do too? As far as the third bullet point, well, that’s how many sightings I have.\r\n\r\nNow, if you’re like most developers, you probably have no idea what probabilistic data structures are. In fact, I did a super-scientific poll on Twitter and found that out of 119 participants, 58% had never heard of them and 22% had heard the term but nothing more. I wonder what percentage of that 22% heard the term for the first time in the poll. We’re a literal-minded lot at times.\r\n\r\nAnyhow. That’s 4 out of 5 developers or, as I like to call it, the Trident dentist ratio. (It’s actually a manifestation of the Pareto principle but I’m a 70s kid). That’s a lot of folks that need to be educated. So, let’s do that.\r\n\r\nA probabilistic data structure is, well, they’re sort of like the TARDIS—bigger on the inside—and JPEG compression—a bit lossy. And, like both, they are fast, accurate enough, and can take you to interesting places of adventure. That last one might not be something a JPEG does.\r\n\r\nMore technically speaking, most probabilistic data structures use hashes to give you faster and smaller data structures in exchange for precision. If you’ve got a mountain of data to process, this is super useful. In this talk, we’ll briefly go over some common probabilistic data structures; dive deep into a couple (Bloom Filter, MinHash, and Top-K); and show a running application that makes use of Top-K to analyze the most commonly used words in all 112,092 of my UFO sightings.\r\n\r\nWhen we’re done, you’ll be ready to start using some of these structures in your own applications. And, if you use the UFO data, maybe you’ll discover that the truth really is out there.",
        "SpeakerName": "Guy Royse",
        "Room": "Wright 1 (50)",
        "USEDT": "09:30:00"
    },
    {
        "SessionTitle": "Asynchronous JavaScript (Part 1): Livin' On A Prayer",
        "SessionDescription": "There is a unique world where Single-Threaded JavaScript manages to be much more. JavaScript interacts with its environment in ways that allow it to handle Asynchronous activities. Using several detailed code examples, we will examine these examples in a unique way to show how these interactions truly work.\r\n\r\nThis talk has been also called, \"JavaScript Enjoys Your Tears\" and \"Lip Sync To The Async\". If you are an experienced developer or new to the field, there is something in this presentation for you.\r\n\r\nThis session takes a look at how JavaScript manages Asynchronous events and some of the ways developer decisions may work for, or against them.\r\n\r\nThis discussion will examine the ways that JavaScript coordinates and manages events using several coding examples and we can determine which are the good, the bad, and ... the ugly.",
        "SpeakerName": "Bob Fornal",
        "Room": "Glenn 1-2 (150)",
        "USEDT": "10:45:00"
    },
    {
        "SessionTitle": "From Front-End to Fullstack",
        "SessionDescription": "Fine, I'll do it myself. There is no denying that the User Experience (UX) of Websites is an important factor in reaching web goals. Bad UX leads to abandonment. Abandonment leads to missed revenue. Now more than ever, so much of the experience is determined by performance factors traditionally outside of the control of the UI. In this talk, I will discuss how we leveraged JAMStack to take ownership of our complete web stack  to increase the UX.",
        "SpeakerName": "Russell Skaggs",
        "Room": "Morgan 1 (50)",
        "USEDT": "10:45:00"
    },
    {
        "SessionTitle": "Just the fun stuff: embracing low code as a hardcore developer",
        "SessionDescription": "Developers do what they do best because they love problem solving. Nothing is more satisfying than seeing those lines of code we've written run smoothly and seamlessly to solve the issue at hand.\r\n\r\nUnfortunately there's a bunch of housekeeping that usually has to come before we get to make those little bits of mastery execute. Decisions need to be made, scaffolding needs to be put in place, our code needs a foundation before we're able to realize those little joys we crave.\r\n\r\nBut what if we didn't have to worry about that? We've all heard of no code and low code platforms, but aren't they just taking our fun from us? Trying to replace us with the robots? Let's talk about what these platforms are, what makes a good platform for developers and how a solid low code platform let's us get from 0 to fun in the least time possible.",
        "SpeakerName": "Rey Riel",
        "Room": "Morgan 2 (50)",
        "USEDT": "10:45:00"
    },
    {
        "SessionTitle": "Measuring the Cost of a GraphQL Query",
        "SessionDescription": "Developers tend to centralise the fragments definitions and use them in each query where the entity is used, even if just a subset of the attributes is necessary.\r\nUnlike rest, the client needs to be more careful on query optimization because the server must process the client's query and create a tailored response. If the client's query is not optimized, it can lead to the server having to process more data than is necessary, resulting in slower response times.\r\nmercurius-explain is a simple and lightweight Mercurius plugin that records how many times a GraphQL resolver is invoked and how long it took to retrieve the data, which helps to keep track of performance changes during development and to troubleshoot possible bottlenecks.",
        "SpeakerName": "Marco Ippolito",
        "Room": "Morgan 3 (50)",
        "USEDT": "10:45:00"
    },
    {
        "SessionTitle": "Using MySQL Document Store with Node.js",
        "SessionDescription": "MySQL Document Store offers developers the best features of both a NoSQL database and a traditional SQL based database. In this session we will discuss how we can use Node.js to access a MySQL Document Store, create/remove collections, create/update/remove documents, retrieve, filter, & sort document lists, and leverage raw SQL to retrieve aggregate data for reporting purposes.",
        "SpeakerName": "Scott Stroz",
        "Room": "Wright 1 (50)",
        "USEDT": "10:45:00"
    },
    {
        "SessionTitle": "The Science of Testing",
        "SessionDescription": "In the past decade the software development paradigm has shifted to “deliver fast” -- with concomitant frameworks and methodologies to support that emphasis – but without proper consideration of quality. So most teams end up failing fast and hard when development continues beyond a shaky foundation. To bring about positive change, we must improve both our knowledge base and our processes to achieve quality delivery without disturbing the bookkeeper’s project delivery timelines. Lessons learned from a career in research science can be applied to QA, with parallels to industry product quality models. Testing techniques and product delivery processes from research science will aid not just testers but the entire team in delivering quality software. More than just day-to-day team activities and testing tools, the science of testing is about the pursuit of knowledge and understanding for its own sake. Testers should foster their skills in the community with professional development activities. Those in attendance will learn about the successes and failures of applying a scientist’s approach to testing software, from the “publish-or-perish” mindset of science to “deliver fast” in IT.\r\n\r\n",
        "SpeakerName": "Thomas Haver",
        "Room": "Wright 2 (30)",
        "USEDT": "10:45:00"
    },
    {
        "SessionTitle": "Tracking Aircraft with Streams + Software-Defined Radio",
        "SessionDescription": "Aircraft are everywhere. Knowing exactly where is paramount as it’s considered bad form for two aircraft to be in the same place at the same time. To avoid this, aircraft worldwide constantly and publicly broadcast their location, heading, and all sorts of other data using a system called ADS-B or Automatic Dependent Surveillance Broadcast.\r\n\r\nThis data is a natural fit for an event stream. After all, it’s a constant stream of data that is literally being broadcast in real-time. But how can we capture these broadcasts and the data within? Surely it must require expensive hardware and special tools!\r\n\r\nNot so much. It turns out that we can capture ADS-B data easily using a combination of a cheap radio dongle and free software—a combination called software-defined radio. From there we can store it in an event stream and consume, transform, and publish it at our leisure. Cool, right?\r\n\r\nIn this session, you’ll learn how software-defined radio works (and not just for ADB-S), how to receive and store ADS-B data in event streams, and how to use those streams to build a map showing real-time flight data using Node.js, Redis Streams, and whatever front-end JavaScript framework happens to be popular that day!",
        "SpeakerName": "Guy Royse",
        "Room": "Glenn 1-2 (150)",
        "USEDT": "13:15:00"
    },
    {
        "SessionTitle": "The Automation Firehose: Be Strategic and Tactical",
        "SessionDescription": "The widespread adoption of test automation has led to numerous challenges that range from development lifecycle integration to simple scripting strategy. Just because a scenario CAN be automated does not mean it SHOULD be automated. Teams that adopt automation often rush to automate everything they can -- the automation firehose. For those scenarios that should be automated, every team must adopt an implementation plan to ensure value is derived from reliable automated test execution. In this session, the audience will learn how to automate both strategically and tactically to maximize the benefits of automation. Entry criteria will be demonstrated for automation in the development lifecycle along with a set of checks to determine automation feasibility & ROI. ",
        "SpeakerName": "Thomas Haver",
        "Room": "Morgan 1 (50)",
        "USEDT": "13:15:00"
    },
    {
        "SessionTitle": "TypeScript - Beyond the Basics",
        "SessionDescription": "TypeScript enables web developers to improve the clarity and reliability of their code. It also enables more powerful tools for writing code. This led to its rapid rise in popularity. But what can it do for you beyond just adding types to your variables and parameters? In this talk, we look at some of the more advanced features in the language that can help you deliver valuable solutions in less time.\r\n\r\nIn this session, we will look at features such as:\r\n* union types\r\n* intersection types\r\n* generics\r\n\r\nWe will also look at some of the new features in TypeScript 5.0.",
        "SpeakerName": "Eric Potter",
        "Room": "Morgan 2 (50)",
        "USEDT": "13:15:00"
    },
    {
        "SessionTitle": "The End… for mobile apps – Enter ASP.NET Core Blazor WebAssembly PWAs",
        "SessionDescription": "Native/Hybrid/Cross-Platform apps are finally no longer needed! Ionic, React Native, Android/iOS Native… no longer necessary. Come listen in to learn why. What was the web standard or feature that tipped me over the edge? I’ve written dozens of mobile apps over the last few years and watched as the PWA spec has grown to impressive feats. It’s official, we’re no longer writing native apps and have moved all-in on Blazor WebAsm PWAs. In this talk, I’ll take you on a journey through Blazor WebAssembly PWAs and tell you why it solves most major line-of-business mobile needs. I’ll talk about the important PWA features supported and show code examples throughout the entire talk. The example is an app we built 4 years ago with Ionic… now fully capable as a PWA.",
        "SpeakerName": "Heath Murphy",
        "Room": "Morgan 3 (50)",
        "USEDT": "13:15:00"
    },
    {
        "SessionTitle": "Zero Pain Frontend to Fullstack in Minutes with Open Source",
        "SessionDescription": "How silly is it that in 2023, with the huge diversity of tooling out there for frontend devs, half of our productive coding time is still spent on continuous error handling?! From code duplication, to typing errors, routing, validation, authentication…the list goes on.  \r\n\r\nAs a NodeJS developer, we want to be able to keep our code DRY –– literally just write once, and reuse, by maintaining our code in a  single source of truth. Sounds too good to be true? It is possible.\r\n\r\nIn this live coding demo we’ll walk you through how to take a common NodeJS/Express/Fastify stack and convert it into a fullstack app in minutes using open source tooling and frameworks all fullstack developers should know about.  \r\n",
        "SpeakerName": "Dev Agrawal",
        "Room": "Wright 1 (50)",
        "USEDT": "13:15:00"
    },
    {
        "SessionTitle": "JavaScript Metaprogramming",
        "SessionDescription": "Metadata, data about data, is everywhere. We seem to intrinsically understand that using data to further describe the data within our systems brings numerous benefits to taming complexity. It follows then that metaprogramming, programming that interacts with the program itself by inspecting or even manipulating its own code can bring similar benefits to our software.\r\n\r\nES6 greatly expands upon JavaScript's existing metaprogramming capabilities with the Symbol, Reflect, and Proxy types. Through some practical examples we'll discuss the role each of these types play within JavaScript metaprogramming and see how they not only affect your code but even drive several modern language features.",
        "SpeakerName": "Dave Fancher",
        "Room": "Glenn 1-2 (150)",
        "USEDT": "14:30:00"
    },
    {
        "SessionTitle": "What to Avoid When Writing Unit Tests",
        "SessionDescription": "“These tests should never have been written. They provide no or little value.” -ME\r\n\r\nTesting code has been described as an \"art form.\" It is, but it should not be. There are many good patterns that should be followed when writing tests. There is even a lifecycle of tests that should be paid some attention. There are also many BAD patterns that developers should be aware of so that they can be avoided (or cleaned up).\r\n\r\nThis session will provide a series of examples of bad front-end tests and how to write them correctly.\r\n\r\n* Tests Should Not Be \"Well-Factored\"\r\n* Keep The Reader In The Test\r\n* Violate The DRY Principle\r\n* Testing Too Much\r\n* Duplication Of Code Logic\r\n* Bad Test Double\r\n* Testing The Mock\r\n* False Positives\r\n* Testing Private Functionality Directly\r\n* Excessive Setup",
        "SpeakerName": "Bob Fornal",
        "Room": "Morgan 1 (50)",
        "USEDT": "14:30:00"
    },
    {
        "SessionTitle": "Vue for React Developers",
        "SessionDescription": "React is one of the most popular front end frameworks... but within the React community there are several misconceptions about Vue. Let's go through and convert a React component into a Vue component. The results might surprise a lot of React developers!",
        "SpeakerName": "Alex Riviere",
        "Room": "Morgan 2 (50)",
        "USEDT": "14:30:00"
    },
    {
        "SessionTitle": "Memory First: An Introduction to Redis",
        "SessionDescription": "Odds are, you’ve heard of Redis. Maybe you’re a total noob and want to learn all about it. Maybe you’ve used it to cache an API call or some JSON strings and want to know what else it can do. Maybe you *haven’t* heard of Redis and are curious what all the fuss is about.\r\n\r\nWanna find out? Join me as I explain what Redis is—a wicked-fast, memory-first database—and why you should care. I’ll share with you what it can store, how you can access it, and how you can make sure that what’s in memory is still there when the power goes off. We’ll explore how you can extend Redis—adding new commands, new data structures, and new capabilities. And, we’ll do it both from the command line and from code with examples in C#, Java, JavaScript, and Python.\r\n\r\nWhen we’re done, you’ll know what Redis is and what all the fuss was about. But, more importantly, you’ll know how to put memory first to build fast applications and faster experiences.",
        "SpeakerName": "Guy Royse",
        "Room": "Morgan 3 (50)",
        "USEDT": "14:30:00"
    },
    {
        "SessionTitle": "CI/CD: A Game-Changer for Code Quality and Production Stability\"",
        "SessionDescription": "CI/CD is a software development practice  in which code changes are automatically built, tested, and deployed to production. This approach has become increasingly popular in recent years due to its ability to improve code quality and production stability.\r\nBy automating the build, test, and deployment process, CI/CD enables developers to quickly and easily identify and fix errors in their code.\r\nThis not only helps to improve the quality of the code, but also helps to prevent defects from being introduced into production systems.\r\n\r\nIn this talk, Siddharth will walk you through with Bitbucket CI/CD custom pipeline setup and performance improvement techniques along with some custom hooks like code commit checker, linter and running tests on the last commit.\r\n\r\n",
        "SpeakerName": "Siddharth .",
        "Room": "Wright 1 (50)",
        "USEDT": "14:30:00"
    }
]